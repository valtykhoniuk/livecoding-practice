1️⃣ JavaScript / TypeScript (чистий JS)
- 1) Напиши функцію unique(arr), яка повертає масив без дублікатів.
- 2) Напиши функцію flatten(arr), яка перетворює вкладені масиви на плоский масив.
- 3) Реалізуй deepClone(obj) для глибокого копіювання об’єктів та масивів.
- 4) Напиши функцію, що підраховує кількість входжень символів у рядку.
- 5) Перевір, чи рядок є паліндромом.
- 6) Відсортуй масив об’єктів за числовим полем age.
- 7) Знайди найбільший та найменший елемент масиву без використання вбудованих методів.
- 8) Напиши функцію chunk(arr, size), що розбиває масив на частини заданого розміру.
- 9) Реалізуй debounce або throttle функцію.
- 10) Напиши функцію, що повертає перші n чисел Фібоначчі.
- 11) Підрахуй суму всіх чисел у масиві, використовуючи reduce.
- 12) Реалізуй власну версію Promise.all через async/await.
- 13) Напиши функцію capitalizeWords(str), що робить великою першу букву кожного слова.
- 14) Перевір, чи два рядки є анаграмами один одного.
15) Зроби генератор випадкових HEX-кольорів.


2️⃣ DOM / Events / Forms
- 16) Створи список з кнопками “видалити” для кожного елемента.
- 17) Реалізуй сортування списку на сторінці за алфавітом.
- 18) Створи форму з валідацією email та пароля.
- 19) Реалізуй toggle елемента по кнопці (показ/сховати).
- 20) Зроби простий таймер з кнопками старт/стоп/сброс.
- 21) Зміни колір елемента при наведенні мишею через JS.
- 22) Створи лічильник кліків по кнопці з відображенням числа.
- 23) Реалізуй галерею з кнопками “вперед/назад”.
- 24) Реалізуй drag & drop простих елементів.
- 25) Напиши live search: фільтрує список під час введення тексту.
- 26) Додай елементи у список через input + кнопку.
- 27) Показ/приховування підказки при фокусі на полі input.
- 28) Реалізуй простий accordion.
- 29) Валідація форми: числові поля повинні приймати лише числа, email має містити @.
- 30) Реалізуй modal (popup) з відкриттям і закриттям.

3️⃣ CSS / Layout / Styling
- 31) Центруй елемент вертикально та горизонтально за допомогою flex або grid.
- 32) Створи адаптивну карточку продукту з зображенням та текстом.
- 33) Створи просту кнопку з hover-ефектом.
- 34) Вертикальне меню з підсвічуванням активного пункту.
35) Sticky header, що завжди на верху сторінки.
36) Простий responsive navbar з бургер-меню.
37) Grid-галерея з мінімальною шириною елемента 200px.
38) Реалізуй dark/light mode toggle на сторінці (зміна класу body).

4️⃣ React (JSX / Components / Hooks)
39) Створи компонент Counter з useState (збільшення/зменшення числа).
40) Реалізуй ToDo List: додавання та видалення задач, збереження state у компоненті.
41) Створи компонент списку з фільтром за текстом.
42) Використай useEffect для console.log при зміні props або state.
43) Передай props у дочірній компонент і відобрази дані.
44) Підніми стан (lifting state up) між двома компонентами.
45) Реалізуй простий select або dropdown із вибором значення.
46) React форма з контролем input (controlled component).
47) Toggle компонент: зміна стану true/false і відображення тексту.
48) Fetch API + useEffect: вивести список користувачів з JSONPlaceholder.
49) Modal компонент із props isOpen та onClose.
50) Таблиця з сортуванням по колонках.
51) Список карточок з кнопкою “Load More” (пагінація).
52) Реалізація simple tabs component.
53) Theme switcher (light/dark) з Context API.

5️⃣ Підступні / логічні завдання
54) Обробка порожніх або null вхідних даних.
55) Пояснити time/space complexity вашого алгоритму.
56) Debugging – знайти помилку в готовому коді.
57) Edge cases: негативні числа, пусті рядки, дублікати.
58) Робота з асинхронними даними: fetch + loading + error.